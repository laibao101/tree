{"version":3,"sources":["webpack:///webpack/bootstrap 9bce95222dbee1bb89f0","webpack:///./ts/index.ts"],"names":["Tree","data","_tree","document","createElement","_data","tree","groups","ul","_curateUl","_container","className","_getTreeData","_group","console","log","initData","Array","from","forEach","item","key","id","parentKey","pid","text","element","_convertToTree","rows","row","i","length","push","parentNode","map","Object","assign","nodes","_hasParent","toDo","v","node","shift","child","parentKeys","concat","parentText","children","create","html"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9bce95222dbee1bb89f0","\"use strict\";\nclass Tree {\n    constructor(data) {\n        this._tree = document.createElement(\"ul\");\n        this._data = data;\n        this.tree = this._data;\n        this.groups = {};\n    }\n    /**\n     * 返回data\n     */\n    get data() {\n        return this._data;\n    }\n    get html() {\n        return this._tree;\n    }\n    /**\n     * 创建一个树形组件\n     */\n    create() {\n        const ul = this._curateUl();\n        this._container = ul;\n        ul.className = \"tree-container\";\n        this._getTreeData();\n        this._group();\n        console.log(this.groups);\n        // this\n        //     ._data\n        //     .forEach((treeItem) => {\n        //         const li : HTMLElement = this._createLi();\n        //         this\n        //             ._container\n        //             .appendChild(li);\n        //         li.className = \"tree-item\";\n        //         li.innerText = treeItem.element;\n        //         li.id = `tree-item-${treeItem.id}`;\n        //         li.setAttribute(\"data-pid\", `${treeItem.pid}`);\n        //     }, this);\n        // this._tree = this._container;\n    }\n    /**\n     * 刷新数据,重新生成一个树\n     */\n    fresh(data) {\n        this._data = data;\n    }\n    /**\n     * 组件的ul部分\n     */\n    _curateUl() {\n        return document.createElement('ul');\n    }\n    /**\n     * 组件的li部分html\n     */\n    _createLi() {\n        return document.createElement('li');\n    }\n    /**\n     * 获取treeData\n     */\n    _getTreeData() {\n        this.initData = Array.from(this._data);\n        this.initData.forEach((item) => {\n            item.key = item.id;\n            item.parentKey = item.pid;\n            item.text = item.element;\n        });\n        const tree = this._convertToTree(this.initData, this.initData[1]);\n        console.log(tree);\n    }\n    /**\n     * 获取当前元素的子节点\n     */\n    _hasParent(rows, row) {\n        let parentKey = row.parentKey;\n        for (let i = 0; i < rows.length; i++) {\n            if (rows[i].key === parentKey)\n                return true;\n        }\n        return false;\n    }\n    _group() {\n        for (var i = 0; i < this.tree.length; i++) {\n            if (this.groups[this.tree[i].pid]) {\n                this.groups[this.tree[i].pid].push(this.tree[i]);\n            }\n            else {\n                this.groups[this.tree[i].pid] = [];\n                this.groups[this.tree[i].pid].push(this.tree[i]);\n            }\n        }\n    }\n    _convertToTree(rows, parentNode) {\n        // 这个函数会被多次调用，对rows做深拷贝，否则会产生副作用。\n        rows = rows.map((row) => {\n            return Object.assign({}, row);\n        });\n        parentNode = Object.assign({}, parentNode);\n        let nodes = [];\n        if (parentNode) {\n            nodes.push(parentNode);\n        }\n        else {\n            // 获取所有的顶级节点\n            for (let i = 0; i < rows.length; i++) {\n                let row = rows[i];\n                if (!this._hasParent(rows, row.parentKey)) {\n                    nodes.push(row);\n                }\n            }\n        }\n        // 存放要处理的节点\n        let toDo = nodes.map((v) => v);\n        while (toDo.length) {\n            // 处理一个，头部弹出一个。\n            let node = toDo.shift();\n            // 获取子节点。\n            for (let i = 0; i < rows.length; i++) {\n                let row = rows[i];\n                if (row.parentKey === node.key) {\n                    let child = row;\n                    let parentKeys = [node.key];\n                    if (node.parentKeys) {\n                        parentKeys = node.parentKeys.concat(node.key);\n                    }\n                    child.parentKeys = parentKeys;\n                    let parentText = [node.text];\n                    if (node.parentText) {\n                        parentText = node.parentText.concat(node.text);\n                    }\n                    child.parentText = parentText;\n                    if (node.children) {\n                        node.children.push(child);\n                    }\n                    else {\n                        node.children = [child];\n                    }\n                    // child加入toDo，继续处理\n                    toDo.push(child);\n                }\n            }\n        }\n        if (parentNode) {\n            return nodes[0].children;\n        }\n        return nodes;\n    }\n}\nconst data = [\n    {\n        element: '轮播',\n        id: 2,\n        pid: 1\n    }, {\n        element: '轮播小图',\n        id: 3,\n        pid: 2\n    }, {\n        element: '首页',\n        id: 1,\n        pid: 0\n    }, {\n        element: '轮播大图',\n        id: 4,\n        pid: 2\n    }, {\n        element: '产品',\n        id: 5,\n        pid: 0\n    }, {\n        element: '蔬菜',\n        id: 6,\n        pid: 5\n    }, {\n        element: '有机蔬菜',\n        id: 7,\n        pid: 6\n    }, {\n        element: '无机蔬菜',\n        id: 8,\n        pid: 6\n    }, {\n        element: '水果',\n        id: 9,\n        pid: 5\n    }, {\n        element: '有机水果',\n        id: 10,\n        pid: 9\n    }, {\n        element: '有机大水果',\n        id: 11,\n        pid: 10\n    }, {\n        element: '有机小水果',\n        id: 12,\n        pid: 10\n    }, {\n        element: '无机水果',\n        id: 13,\n        pid: 9\n    }\n];\n// 单元测试\nconst tree = new Tree(data);\ntree.create();\nconsole.log(tree.html);\n\n\n\n// WEBPACK FOOTER //\n// ./ts/index.ts"],"sourceRoot":""}