{"version":3,"sources":["webpack:///webpack/bootstrap 19d4559f9b3cbf5038d0","webpack:///./ts/index.ts"],"names":["Tree","data","_tree","document","createElement","_data","ul","_curateUl","_container","className","root","_getRoot","console","log","_getTreeData","_sortData","Array","from","sort","a","b","pid","splice","_getChild","result","forEach","item","index","push","element","id","tree","create","html"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 19d4559f9b3cbf5038d0","\"use strict\";\r\nclass Tree {\r\n    constructor(data) {\r\n        this._tree = document.createElement(\"ul\");\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * 返回data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    get html() {\r\n        return this._tree;\r\n    }\r\n    /**\r\n     * 创建一个树形组件\r\n     */\r\n    create() {\r\n        const ul = this._curateUl();\r\n        this._container = ul;\r\n        ul.className = \"tree-container\";\r\n        const root = this._getRoot();\r\n        console.log(root);\r\n        this._getTreeData();\r\n        // this\r\n        //     ._data\r\n        //     .forEach((treeItem) => {\r\n        //         const li : HTMLElement = this._createLi();\r\n        //         this\r\n        //             ._container\r\n        //             .appendChild(li);\r\n        //         li.className = \"tree-item\";\r\n        //         li.innerText = treeItem.element;\r\n        //         li.id = `tree-item-${treeItem.id}`;\r\n        //         li.setAttribute(\"data-pid\", `${treeItem.pid}`);\r\n        //     }, this);\r\n        // this._tree = this._container;\r\n    }\r\n    /**\r\n     * 刷新数据,重新生成一个树\r\n     */\r\n    fresh(data) {\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * 组件的ul部分\r\n     */\r\n    _curateUl() {\r\n        return document.createElement('ul');\r\n    }\r\n    /**\r\n     * 组件的li部分html\r\n     */\r\n    _createLi() {\r\n        return document.createElement('li');\r\n    }\r\n    /**\r\n     * 获取root,pid最小的就是root\r\n     */\r\n    _getRoot() {\r\n        this._sortData = Array.from(this._data);\r\n        this\r\n            ._sortData\r\n            .sort((a, b) => a.pid - b.pid);\r\n        this.root = this._sortData[0];\r\n        this._sortData.splice(0, 1);\r\n        return this.root;\r\n    }\r\n    /**\r\n     * 获取treeData\r\n     */\r\n    _getTreeData() {\r\n        console.log(this._getChild(this.root.pid));\r\n    }\r\n    /**\r\n     * 获取当前元素的子节点\r\n     */\r\n    _getChild(pid) {\r\n        let result = [];\r\n        this._sortData.forEach((item, index) => {\r\n            if (item.pid === pid) {\r\n                result.push(item);\r\n                this._sortData.splice(index, 1);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n}\r\nconst data = [\r\n    {\r\n        element: '轮播',\r\n        id: 2,\r\n        pid: 1\r\n    }, {\r\n        element: '轮播小图',\r\n        id: 3,\r\n        pid: 2\r\n    }, {\r\n        element: '首页',\r\n        id: 1,\r\n        pid: 0\r\n    }, {\r\n        element: '轮播大图',\r\n        id: 4,\r\n        pid: 2\r\n    }, {\r\n        element: '产品',\r\n        id: 5,\r\n        pid: 0\r\n    }, {\r\n        element: '蔬菜',\r\n        id: 6,\r\n        pid: 5\r\n    }, {\r\n        element: '有机蔬菜',\r\n        id: 7,\r\n        pid: 6\r\n    }, {\r\n        element: '无机蔬菜',\r\n        id: 8,\r\n        pid: 6\r\n    }, {\r\n        element: '水果',\r\n        id: 9,\r\n        pid: 5\r\n    }, {\r\n        element: '有机水果',\r\n        id: 10,\r\n        pid: 9\r\n    }, {\r\n        element: '有机大水果',\r\n        id: 11,\r\n        pid: 10\r\n    }, {\r\n        element: '有机小水果',\r\n        id: 12,\r\n        pid: 10\r\n    }, {\r\n        element: '无机水果',\r\n        id: 13,\r\n        pid: 9\r\n    }\r\n];\r\n// 单元测试\r\nconst tree = new Tree(data);\r\ntree.create();\r\nconsole.log(tree.html);\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/index.ts"],"sourceRoot":""}